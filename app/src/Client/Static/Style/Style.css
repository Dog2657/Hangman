body {
  --backgroundColour: #242424;
  background-color: var(--backgroundColour);
  margin: 0;
}

.FancyButton, .Game .Keyboard .Guess_Word_BNT_Containor > button, .Menu form button {
  background-color: rgba(var(--Colour, 0, 170, 255), 0.25);
  border: 1px solid rgb(var(--Colour, 0, 170, 255));
  font-weight: lighter;
  border-radius: 0.25em;
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  padding: 0.5em 1em;
  font-size: 1.5rem;
  padding: 5px 20px;
  cursor: pointer;
  color: white;
  outline: none;
}
.FancyButton:hover, .Game .Keyboard .Guess_Word_BNT_Containor > button:hover, .Menu form button:hover, .FancyButton:focus, .Game .Keyboard .Guess_Word_BNT_Containor > button:focus, .Menu form button:focus {
  background-color: rgba(var(--Colour, 0, 170, 255), 0.5);
}

.Menu {
  background-color: var(--backgroundColour);
  transition: opacity 500ms ease-out;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  position: absolute;
  display: flex;
  height: 100vh;
  width: 100vw;
  width: 100vw;
  opacity: 1;
  z-index: 2;
  gap: 10px;
  left: 0;
  top: 0;
}
.Menu:not(.Active) {
  opacity: 0 !important;
  pointer-events: none;
}
.Menu.Offline > form[data-Game-Type=Catagory], .Menu.Offline > form[data-Game-Type=Random] {
  --Colour: 128, 128, 128 !important;
  pointer-events: none;
  opacity: 0.5;
}
.Menu h1 {
  -webkit-text-stroke: 2px white;
  text-align: center;
  color: transparent;
  font-weight: 500;
  font-size: 4rem;
  margin: 0;
}
.Menu form {
  transition: background-color 200ms ease-in-out;
  transition: opacity 200ms ease-in-out;
  background-color: rgba(var(--Colour), 0.2);
  border-radius: 0.25em;
  align-items: center;
  font-size: 15px;
  display: flex;
  width: 300px;
  opacity: 1;
}
.Menu form[data-Game-Type=Custom] {
  --Colour: 0, 128, 0;
}
.Menu form[data-Game-Type=Catagory] {
  --Colour: 255, 255, 0;
}
.Menu form[data-Game-Type=Random] {
  --Colour: 255, 45, 45;
}
.Menu form input, .Menu form select, .Menu form div {
  flex-grow: 1;
  background: none;
  border: none;
  text-align: center;
  color: white;
}
.Menu form div {
  height: -webkit-min-content;
  height: -moz-min-content;
  height: min-content;
}
.Menu .By {
  opacity: 0.5;
  color: grey;
  margin-top: 10px;
}

.Game:not(.Active) {
  display: none;
}
.Game button.EndGame {
  background: none;
  font-size: 20px;
  cursor: pointer;
  border: none;
  margin: 10px;
}
.Game button.EndGame svg {
  fill: white;
}
.Game .Status {
  isolation: isolate;
  background: rgba(255, 196, 86, 0.5);
  border-radius: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  max-width: -webkit-max-content;
  max-width: -moz-max-content;
  max-width: max-content;
  margin: auto;
}
.Game .Status::after {
  content: attr(data-Attemps-Left);
  position: absolute;
  color: rgba(0, 0, 0, 0.3);
  font-size: 7rem;
  -webkit-text-stroke: 2px white;
}
.Game .Status img {
  z-index: -1;
  width: 200px;
  height: 200px;
  max-width: 100vw;
  aspect-ratio: 1/1;
}
.Game .Word {
  justify-content: space-evenly;
  margin: 20px 10px;
  font-size: 2rem;
  color: white;
  display: flex;
}
.Game .Word span {
  transition: color 500ms ease-out;
  justify-content: center;
  width: -webkit-fill-available;
  width: -moz-available;
  width: fill-available;
  font-weight: lighter;
  align-items: center;
  max-width: 80px;
  display: flex;
  margin: 0 1px;
  height: 80px;
}
.Game .Word span:not(.Guessed) {
  color: rgba(255, 255, 255, 0.5);
}
.Game .Word span:not(.space) {
  border-bottom: 5px solid rgb(121, 121, 121);
}
.Game .Keyboard {
  margin: 50px auto;
  background-color: #eee;
  box-sizing: border-box;
  flex-direction: column;
  height: -webkit-max-content;
  height: -moz-max-content;
  height: max-content;
  border-radius: 20px;
  text-align: center;
  max-width: 806px;
  display: flex;
  width: 100vw;
  padding: 5px;
}
.Game .Keyboard .Guess_Word_BNT_Containor > button {
  --Colour: 0, 0, 0;
  font-size: 20px;
  margin: 5px 0;
}
.Game .Keyboard .Row {
  justify-content: center;
  display: flex;
}
.Game .Keyboard .Row .Key {
  transition: all 200ms ease-in-out;
  border: 1px solid #444;
  justify-content: center;
  width: 10vw;
  box-sizing: border-box;
  border-radius: 0.3em;
  align-items: center;
  position: relative;
  background: #333;
  text-align: center;
  font-size: large;
  max-width: 70px;
  display: flex;
  padding: 0.2em;
  color: #eee;
  margin: 0.2em;
  height: 70px;
}
.Game .Keyboard .Row .Key.Correct {
  background-color: rgba(0, 255, 0, 0.75);
}
.Game .Keyboard .Row .Key.Wrong {
  background-color: rgba(255, 0, 0, 0.75);
}
.Game .Keyboard .Row .Key.Correct, .Game .Keyboard .Row .Key.Wrong {
  translate: 0 4px;
}
.Game .Keyboard .Row .Key:not(:is(.Correct, .Wrong)) {
  box-shadow: 0 0.2em 0 0.05em #222;
  border-bottom-color: #555;
  cursor: pointer;
}/*# sourceMappingURL=Style.css.map */